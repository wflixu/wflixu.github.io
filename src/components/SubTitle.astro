---
import QRCode from 'qrcode';

import FormattedDatetime from './FormattedDatetime.astro';

interface Props {
  title?: string;
  datetime: string | Date;
  size?: 'sm' | 'lg';
  className?: string;
}

const { datetime, size = 'sm', className, title } = Astro.props;

let qrImg = '';
if (title) qrImg = await QRCode.toDataURL(Astro.url.href, { type: 'image/jpeg', margin: 1 });
---

<div class="relative z-1 flex items-center space-x-2" class:list={[className]}>
  <i class="i-custom-calendar h-6 w-6 op-80" aria-hidden="true" class:list={[size === 'sm' ? 'scale-90' : 'scale-100']}></i>
  <span class="sr-only op-80">Posted on:</span>
  <span class="italic op-80" class:list={[size === 'sm' ? 'text-sm' : 'text-4']}>
    <FormattedDatetime datetime={datetime} />
  </span>
  {
    qrImg && (
      <div class="group relative z-0 lt-sm:hidden">
        <i class="i-ic-round-qr-code block h-6 w-6 op-80" aria-hidden="true" />
        <img
          id="qr-code"
          class="absolute left-full top-0 z-1 h-30 max-w-30 w-30 origin-lt scale-0 transition group-hover-scale-100"
          src={qrImg}
          alt={title}
        />
      </div>
    )
  }
</div>
